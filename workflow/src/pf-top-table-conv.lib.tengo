ll := import("@platforma-sdk/workflow-tengo:ll")
math := import("math")

getColumns := func(blockId, species, log2FCThreshold, pAdjFCThreshold) {

	thresholds := "[{\"columnId\": {\"name\": \"pl7.app/rna-seq/log2foldchange\",\"valueType\": \"Double\"},\"label\": \"Min LogFC (left vertical)\",\"value\": " + string(-log2FCThreshold) + "},"
	thresholds = thresholds + "{\"columnId\": {\"name\": \"pl7.app/rna-seq/log2foldchange\",\"valueType\": \"Double\"},\"label\": \"Max LogFC (right vertical)\",\"value\": " + string(log2FCThreshold) + "},"
	thresholds = thresholds + "{\"columnId\": {\"name\": \"pl7.app/rna-seq/minlog10padj\",\"valueType\": \"Double\"},\"label\": \"Y bound\",\"value\": " + string(-math.log10(pAdjFCThreshold)) + "}]"

  return {
    axes: [
		{
        column: "Contrast",
        id: "contrast",
        allowNA: false,
        spec: {
          name: "pl7.app/rna-seq/contrastGroup",
          type: "String",
          domain: {
            "pl7.app/blockId": blockId
          },
          annotations: {
            "pl7.app/label": "Contrast"
          }
        }
      },
		{
        column: "gene",
        spec: {
          name: "pl7.app/rna-seq/geneId",
          type: "String",
          domain: {
            "pl7.app/species": species
          },
          annotations: {
            "pl7.app/label": "Ensembl Id",
			"pl7.app/table/visibility": "default",
			"pl7.app/graph/axis/highCardinality": "true"
          }
        }
      }
      ],
    columns: [
			{
				column: "logfc",
				id: "log2foldchange",
				allowNA: true,
				spec: {
					name: "pl7.app/rna-seq/log2foldchange",
					valueType: "Double",
					annotations: {
						"pl7.app/label": "Log2FC",
						"pl7.app/table/orderPriority": "60",
						"pl7.app/format": ".2f"
					}
				}
			},
      {
				column: "pval_adj",
				id: "qvalue",
				allowNA: true,
				spec: {
					name: "pl7.app/rna-seq/padj",
					valueType: "Double",
					annotations: {
						"pl7.app/label": "Adjusted p-value",
						"pl7.app/table/orderPriority": "20",
						"pl7.app/format": ".2e"

					}
				}
			},
      {
				column: "minlog10padj",
				id: "minlog10padj",
				allowNA: true,
				spec: {
					name: "pl7.app/rna-seq/minlog10padj",
					valueType: "Double",
					annotations: {
						"pl7.app/label": "-log10 adjusted p-value",
						"pl7.app/table/orderPriority": "10",
						"pl7.app/format": ".2f"

					}
				}
			},
			{
				column: "regulationDirection",
				id: "regulationDirection",
				spec: {
					name: "pl7.app/rna-seq/regulationDirection",
					valueType: "String",
					annotations: {
						"pl7.app/label": "Regulation direction",
						"pl7.app/graph/palette": "{\"name\":\"triadic\",\"mapping\":{\"Up\":\"19\",\"Down\":\"22\",\"NS\":\"25\"}}",
						"pl7.app/graph/thresholds": thresholds,
						"pl7.app/table/orderPriority": "5"
					}
				}
			}
      ],
    storageFormat: "Binary",
    partitionKeyLength: 1
  }
}

export ll.toStrict({
	getColumns: getColumns
})
